(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{264:function(t,s,a){"use strict";a.r(s);var n=a(9),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"_90-的pep8"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_90-的pep8"}},[t._v("#")]),t._v(" 90%的PEP8")]),t._v(" "),a("p",[a("strong",[t._v("请根据笔记的写作日期，选择性阅读。")])]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("作者：")]),t._v(" "),a("RouterLink",{attrs:{to:"/about/"}},[t._v(t._s(t.$themeConfig.self.name))]),a("br"),t._v(" "),a("strong",[t._v("Home：")]),t._v(" "),a("RouterLink",{attrs:{to:"/"}},[t._v(t._s(t.$themeConfig.self.site))]),a("br"),t._v(" "),a("strong",[t._v("写作日期：")]),t._v(" 2018-05-16"),a("br"),t._v(" "),a("strong",[t._v("系统：")]),t._v(" Mac"),a("br"),t._v(" "),a("strong",[t._v("软件版本：")]),t._v(" python@3.6.5"),a("br"),t._v(" "),a("strong",[t._v("参考：")]),a("br"),t._v(" "),a("a",{attrs:{href:"https://www.python.org/dev/peps/pep-0008/",target:"_blank",rel:"noopener noreferrer"}},[t._v("PEP8"),a("OutboundLink")],1),a("br"),t._v(" "),a("a",{attrs:{href:"https://book.douban.com/subject/26709315/",target:"_blank",rel:"noopener noreferrer"}},[t._v("《Effective Python》"),a("OutboundLink")],1)],1)]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("优美的代码不但使人愉悦，还能体现书写者的水平，很多求职者的简历上都会写上“良好的代码风格”，我通常会问“怎么体现良好的代码风格？”")]),t._v(" "),a("p",[t._v("这时候多半都是举例陈述，其实，你只需要告诉我，你的代码风格遵循PEP8提议即可。")]),t._v(" "),a("p",[t._v("笔记绝大部分内容来自于PEP8，只摘取了个人觉得重要的部分。")]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"一、空白"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、空白"}},[t._v("#")]),t._v(" 一、空白")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("使用space（空格）来表示缩进，而不要使用tab（制表符）。\n（因为不同的系统tab的空格数可能会有所不同）")])]),t._v(" "),a("li",[a("p",[t._v("和语法相关的每一层缩进都用4个空格来表示\n每行的字符不应超过79个")])]),t._v(" "),a("li",[a("p",[t._v("对于占据多行的长表达式来说，除了首行之外的其余各行都应该在通常的缩进级别之上再加4个空格")])]),t._v(" "),a("li",[a("p",[t._v("文件中的函数与类之间应该用2个空行隔开")])]),t._v(" "),a("li",[a("p",[t._v("在同一类中，各方法之间应该用2个空行隔开")])]),t._v(" "),a("li",[a("p",[t._v("在使用下标来获取列表元素，调用函数或给关键字参数赋值的时候，不要在两旁添加空格。")])]),t._v(" "),a("li",[a("p",[t._v("为变量赋值的时候，赋值符号的左侧和右侧应该各自写上一个空格，而且各写一个就好。")])])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"二、命名"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、命名"}},[t._v("#")]),t._v(" 二、命名")]),t._v(" "),a("ol",[a("li",[t._v("函数、变量及属性应该用小写字母来拼写，各单词之间以下划线相连")]),t._v(" "),a("li",[t._v("受保护的实例属性，应该以单一下划线开头")]),t._v(" "),a("li",[t._v("私有的实例属性，应该以单一下划线开头")]),t._v(" "),a("li",[t._v("类与异常，应该以每个单词首字母均大写的形式来命名")]),t._v(" "),a("li",[t._v("模块级别的常量，应该全部采用大写字母来拼写，各单词之间以下划线相连")]),t._v(" "),a("li",[t._v("类中的实例方法（instance method）应该把首个参数命名为self，以表示该对象对象")]),t._v(" "),a("li",[t._v("类方法（class method）的首个参数，应该命名为cls，以表示该类自身。")])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"三、表达式和语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三、表达式和语句"}},[t._v("#")]),t._v(" 三、表达式和语句")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("采用内联形式的否定词，而不是把否定词放在整个表达式前面。例如：")]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 不推荐的写法")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("is")]),t._v(" b\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 推荐的写法")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("is")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" b \n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])])]),t._v(" "),a("li",[a("p",[t._v("不要通过检测长度方法（如if len(somelist) == 0）来判断somelist是否为[]或''等空值，而是应该采用if not somelist，这种写法来判断，它会假定：空值会自动被评估为False。")])]),t._v(" "),a("li",[a("p",[t._v("检测somelist是否为非空值时，也应如此，if somelist语句默认会把非空的值判断为True。")])]),t._v(" "),a("li",[a("p",[t._v("不要写单行的if、for、while以及except复合语句，而是应该把这些语句分为多行来写，以示清晰。")])]),t._v(" "),a("li",[a("p",[t._v("import语句应该放在文件开头。")])]),t._v(" "),a("li",[a("p",[t._v("引入模块的时候，总是应该使用绝对名称，而不应该根据当前模块的路径来使用绝对名称，例如，引入bar中的foo模块时：")]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 不推荐的写法")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" foo\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 推荐的写法")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" bar "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" foo\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])])]),t._v(" "),a("li",[a("p",[t._v("如果非要采用相对名称来写import语句，那应该采用明确的写法：")]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" foo\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])])]),t._v(" "),a("li",[a("p",[t._v("import语句应该分为三部分，分别表示标准库模块、第三方模块以及自用模块，在每一个部分之中，各import语句应该按模块字母顺序来排列。")])]),t._v(" "),a("li",[a("p",[t._v("一个import语句只导入一个模块，以示清晰")])]),t._v(" "),a("li",[a("p",[t._v("同一个程序中存在同名对象时，比如unit模块中存在方法foo，bar模块中也存在方法foo，采用以下两种方式解决。")]),t._v(" "),a("blockquote",[a("p",[t._v("import方式")])]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" bar\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" unit\n\nbar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("foo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nunit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("foo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("blockquote",[a("p",[t._v("as方式")])]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" bar "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" foo "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" bfoo\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" unit "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" foo "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" ufoo\n  \nbfoo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nufoo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])])])]),t._v(" "),a("h2",{attrs:{id:"四、函数、类和模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#四、函数、类和模块"}},[t._v("#")]),t._v(" 四、函数、类和模块")]),t._v(" "),a("p",[t._v("这部分是我自己添加的，仅供借鉴。")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("函数注释")]),t._v(" "),a("p",[t._v("参考\n"),a("a",{attrs:{href:"https://docs.python.org/3/tutorial/controlflow.html#function-annotations",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方文档4.7.7. Function Annotations"),a("OutboundLink")],1)]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" typing  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# <1>")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("textinput")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" title"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" info"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" typing"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Tuple"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("input")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bool")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# <2>")]),t._v("\n    text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ok "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" QInputDialog"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("getText"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" title"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" info"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ok\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("p",[t._v("<1> 用于注释除int、float和str类型以外的类型")]),t._v(" "),a("p",[t._v("<2> 因为tuple为内置函数，所以借助typing进行注释，另外函数注释以字典的形式保存在__annotations__中。")])]),t._v(" "),a("li",[a("p",[t._v("文档字符串")]),t._v(" "),a("p",[t._v("文档字符串又称docstring，这个是我觉得很有必要的部分，python内置的文档字符串可以通过__doc__访问得到，help()方法也可以查看文档字符串。")]),t._v(" "),a("ul",[a("li",[t._v("模块字符串")])]),t._v(" "),a("p",[t._v("docstring的头一行，应该是一句话，用来描述本模块的用途。")]),t._v(" "),a("p",[t._v("它下面的那段话，应该包含一些细节信息，把与本模块操作相关的内容，告诉模块的使用者。")]),t._v(" "),a("ul",[a("li",[t._v("类字符串")])]),t._v(" "),a("p",[t._v("docstring的头一行，一句话说明本类的用途。")]),t._v(" "),a("p",[t._v("它下面的那段话，详述类的操作方式。\n类中比较重要的public属性及方法，也应该在docstring中加以强调。\n此外，应该告诉子类实现者，如何才能正确地与protected属性及超类方法相交互。")]),t._v(" "),a("ul",[a("li",[t._v("函数字符串")])]),t._v(" "),a("p",[t._v("docstring的头一行，一句话说明本函数的功能。")]),t._v(" "),a("p",[t._v("接下来用一段话描述函数的具体行为和函数的参数。如果函数没有返回值，则不要出现“return None”这样的说法。")])])]),t._v(" "),a("p",[t._v("<完>")])])}),[],!1,null,null,null);s.default=e.exports}}]);